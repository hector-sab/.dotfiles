# Example config:
# /opt/local/share/doc/tmux/example_tmux.conf
#
# Allow RGB/True colors to be displayed
# NOTE(hector): Why does `termianl-overrides` allows nvim
#   or `tmux info | grep -e RGB -e Tc` see that the terminal is capable
#   of RGB/True colors, but not `terminal-features`. Though the latter
#   did enabled tmux to show RGB colors
# set -as terminal-features ",*256col*:RGB"
# set -ga terminal-overrides ",*256col*:RGB"
set -as terminal-features ",*256col*:RGB"

# Set index start
set -g base-index 1
set -g pane-base-index 1

# Attach to an active session when the last window of the current session
# is closed
set -g detach-on-destroy no-detached

# No bells
set -g bell-action none

# Turn the mouse on, but without copy mode dragging
# NOTE(hector): When this is enabled you can not scroll
#   when `man $PROGRAM`
# set -g mouse on
# unbind -n MouseDrag1Pane
# unbind -T copy-mode MouseDrag1Pane

# Vim-like pane switching
bind -r ^ last-window
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

set -s escape-time 10
set -g focus-events on
set -s set-clipboard on
set -g mode-keys vi
set -g history-limit 50000


# Reload source
bind r source-file ~/.config/tmux/tmux.conf \; display "Config file reloaded"

# Open new windows with the path of the current pane
bind c new-window -c "#{pane_current_path}"

# Open new split panes with the path of the current pane
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"


################################### Under Construction

# TODO: How to make an alias execute the pane rename without having to
#   execute it from the terminal?
# set -s command-alias[100] 'rename-pane=run-shell "echo HI"'
